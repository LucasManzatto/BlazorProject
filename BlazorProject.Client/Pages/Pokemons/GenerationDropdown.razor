@using BlazorProject.Client.Shared.Models
@using BlazorProject.Shared.DTO
@inject HttpClient Http
@inherits RealmComponent<State>
@SearchInput

<input class="form-control" type="text" placeholder="Gen 1" @oninput="@(ui => SearchInput = (string)ui.Value)" />
@if (SearchInput.Length > 0)
{
    <div style='max-height:200px; overflow:auto;' aria-labelledby="@GenNumber">
        @{
            if (Items.Count == 0)
            {
                <div>Loading...</div>
            }
            else
            {
                foreach (var item in Items)
                {
                    <button @onclick="@(() => SetPokemon(item.Id))"
                            class="dropdown-item"
                            type="button">
                        @item.Text
                    </button>
                }
            }
        }
    </div>
}
@*<div class="btn-group dropdown">
    <button class="btn btn-secondary dropdown-toggle"
            type="button" id="@GenNumber"
            data-toggle="dropdown"
            aria-haspopup="true"
            aria-expanded="false">
        Generation @GenNumber
    </button>
    @if (SearchInput.Length > 0)
    {
        <div class="dropdown-menu" style='max-height:200px; overflow:auto;' aria-labelledby="@GenNumber">
            @{
                if (Items.Count == 0)
                {
                    <div>Loading...</div>
                }
                else
                {
                    foreach (var item in Items)
                    {
                        <button @onclick="@(() => SetPokemon(item.Id))"
                                class="dropdown-item"
                                type="button">
                            @item.Text
                        </button>
                    }
                }
            }
        </div>
    }

</div>*@

@code {
    List<DropdownModel> Items { get; set; } = new List<DropdownModel>();
    [Parameter]
    int GenNumber { get; set; }
    public string SearchInput { get; set; } = "";

    protected async override Task OnInitAsync()
    {
        Items = await CreateDropdownModelData(GenNumber);
    }

    async void SetPokemon(int pokemonId)
    {
        var pokemon = await Http.GetJsonAsync<FullPokemon>($"api/Pokemons/{pokemonId}");
        Dispatch(new Redux.Actions.Pokemon.Set(pokemon));
    }

    private async Task<List<DropdownModel>> CreateDropdownModelData(int id)
    {
        var list = await Http.GetJsonAsync<List<DropdownPokemon>>($"api/Generation/{id}/pokemons");
        List<DropdownModel> newList = new List<DropdownModel>();
        list.ForEach(item =>
            newList.Add(new DropdownModel { Id = item.Id, Text = item.Name.FirstCharToUpper() }));
        return newList;
    }
    private void Filter()
    {

    }

}
